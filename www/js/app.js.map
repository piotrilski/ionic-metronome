{"version":3,"sources":["app.js","app.routes.js","metronome/metronome.component.js","metronome/metronome.controller.js","metronome/metronome-bpm-selector/metronome-bpm-selector.component.js","metronome/metronome-bpm-selector/metronome-bpm-selector.controller.js","metronome/metronome-menu/metronome-menu.component.js","metronome/metronome-menu/metronome-menu.controller.js"],"names":["angular","module","run","$ionicPlatform","ready","window","cordova","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","config","$stateProvider","$urlRouterProvider","otherwise","state","url","views","template","component","templateUrl","controller","controllerAs","MetronomeController","$inject","$timeout","vm","bpm","conf","minBpmValue","maxBpmValue","$onInit","onInit","onBpmChange","bindings","MetronomeBpmSelectorController","changeBpm","inpt","increase","parseInt","MetronomeMenuController"],"mappings":"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","file":"app.js","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n\tangular\r\n\t\t.module('metronome', ['ionic'])\r\n\t\t.run(function($ionicPlatform) {\r\n\t\t\t$ionicPlatform.ready(function() {\r\n\t\t\t\tif(window.cordova && window.cordova.plugins.Keyboard) {\r\n\t\t\t\t\t// Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n\t\t\t\t\t// for form inputs)\r\n\t\t\t\t\tcordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\r\n\r\n\t\t\t\t\t// Don't remove this line unless you know what you are doing. It stops the viewport\r\n\t\t\t\t\t// from snapping when text inputs are focused. Ionic handles this internally for\r\n\t\t\t\t\t// a much nicer keyboard experience.\r\n\t\t\t\t\tcordova.plugins.Keyboard.disableScroll(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(window.StatusBar) {\r\n\t\t\t\t\tStatusBar.styleDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n\tangular\r\n\t\t.module('metronome', [ 'ionic' ])\r\n        .config(($stateProvider, $urlRouterProvider) => {\r\n            $urlRouterProvider.otherwise('/');\r\n            $stateProvider\r\n                .state('index', {\r\n                    url: '/',\r\n                    views: {\r\n                        'leftMenu': { template: '<pi-metronome-menu></pi-metronome-menu>' },\r\n                        'main': { template: '<pi-metronome></pi-metronome>' }\r\n                    }\r\n                });\r\n        });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .component('piMetronome', {\r\n            templateUrl: 'metronome/metronome.html',\r\n            controller: 'MetronomeController',\r\n            controllerAs: 'mc'\r\n        });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .controller('MetronomeController', MetronomeController);\r\n\r\n    MetronomeController.$inject = ['$timeout'];\r\n\r\n    function MetronomeController($timeout) {\r\n        let vm = this;\r\n        \r\n        vm.bpm = 120;\r\n        vm.conf = {\r\n            minBpmValue: 0,\r\n            maxBpmValue: 300\r\n        };\r\n\r\n        vm.$onInit = onInit;\r\n        vm.onBpmChange = onBpmChange;\r\n\r\n        function onInit() {\r\n            \r\n        }\r\n\r\n        function onBpmChange(bpm) {\r\n            vm.bpm = bpm;\r\n        }       \r\n    }\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .component('piMetronomeBpmSelector', {\r\n            templateUrl: 'metronome/metronome-bpm-selector/metronome-bpm-selector.html',\r\n            bindings: {\r\n                bpm: '<',\r\n                conf: '<',\r\n                onBpmChange: '&'\r\n            },\r\n            controller: 'MetronomeBpmSelectorController',\r\n            controllerAs: 'mbsc'\r\n        });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .controller('MetronomeBpmSelectorController', MetronomeBpmSelectorController);\r\n\r\n    MetronomeBpmSelectorController.$inject = [];\r\n\r\n    function MetronomeBpmSelectorController() {\r\n        let vm = this;\r\n        \r\n        vm.changeBpm = changeBpm;\r\n        vm.$onInit = onInit;\r\n\r\n        function onInit() {\r\n\r\n        }\r\n\r\n        function changeBpm(inpt, increase) {\r\n            let bpm = parseInt(inpt, 10);\r\n\r\n            if(increase) {\r\n                vm.bpm = bpm < vm.conf.maxBpmValue ? \r\n                    bpm + 1 : vm.conf.maxBpmValue;\r\n            } else {\r\n                vm.bpm = bpm > vm.conf.minBpmValue ? \r\n                    bpm - 1 : vm.conf.minBpmValue;\r\n            }\r\n\r\n            vm.onBpmChange({bpm: vm.bpm});\r\n        }\r\n    }\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .component('piMetronomeMenu', {\r\n            templateUrl: 'metronome/metronome-menu/metronome-menu.html',\r\n            bindings: {},\r\n            controller: 'MetronomeMenuController',\r\n            controllerAs: 'mmc'\r\n        });\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular.module('metronome')\r\n        .controller('MetronomeMenuController', MetronomeMenuController);\r\n\r\n    MetronomeMenuController.$inject = [];\r\n\r\n    function MetronomeMenuController() {\r\n        let vm = this;\r\n    }\r\n})();"]}